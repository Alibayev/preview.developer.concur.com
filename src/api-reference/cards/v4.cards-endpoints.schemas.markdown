
---
title: Cards v4 - Endpoint Schemas
layout: reference
---

{% include prerelease.html %}

# <a name="schemas-account"></a>Cards v4 - Account Schemas

## <a name="schema-create-account-list"></a>Create Account List

Name|Type|Format|Description
---|---|---|---
`accounts`|`array`|[`Create Account`](#schema-create-account)|An array of Accounts to be created

## <a name="schema-create-account"></a>Create Account

Name|Type|Format|Description
---|---|---|---
`accountType`|`enum`|-|**Required** Type of the credit card account. Supported values: `I - Individual`, `M - Managing (the master account of virtual cards)`, `V - Virtual card`
`billedCurrency`|`string`|3-letter ISO 4217 currency code|Billed currency of the card account
`billingAccount`|`object`|[`Billing Account Reference`](#schema-billingaccountreference)|Reference to the billing account, e.g. in case of virual card this references the managing/master account
`cardBrand`|`enum`|-|Brand of the card. Supported values: `AX - American Express`, `CA - MasterCard`, `CB - Carte Blance`, `DC - Diners Club`, `DS - Discover`, `EC - EuroCard`, `ER - ENROUTE`, `JC - JCB International`, `OT - Other`, `TP - UATP Card`, `UP - China Union Pay`, `VI - VISA`
`cardProductDescription`|`string`|-|**Required** Branded name of the credit card; might be used for display purposes
`cardProductType`|`enum`|-|**Required** Card product type. Supported values: `CORP - Corporate Card`, `BUSN - Business Card`, `PERS - Personal Card`
`cardholder`|`object`|[`Cardholder`](#schema-cardholder)|Cardholder owning this card account
`externalId`|`string`|-|**Required** Unique identifier (token) for a card account as defined by an external system (outside SAP Concur). Must not contain primary account number (PAN).
`lastSegment`|`string`|-|**Required** Last four digits of the credit card number
`liabilityType`|`enum`|-|**Required** Liability type (payment method). Supported values: `IBIP - Individually Billed, Individually Paid`, `IBCP - Individually Billed, Company Paid`, `CBCP - Company Billed Company Paid`
`nameOnCard`|`string`|-|**Required** Embossed name on the card
`provider`|`object`|[`Provider`](#schema-provider)|**Required** Credit Card Provider
`status`|`enum`|-|Lifecycle status (default: Active). Supported values: `A - Active`, `C - Canceled`
`travelRequest`|`object`|[`Travel Request Reference`](#schema-travelrequestreference)|Reference to an SAP Concur Travel Request which is related to this card account

## <a name="schema-billingaccountreference"></a>Billing Account Reference

Name|Type|Format|Description
---|---|---|---
`externalId`|`string`|-|**Required** Unique identifier (token) of the referenced billing account as defined by an external system (outside SAP Concur). Must not contain primary account number (PAN).

## <a name="schema-cardholder"></a>Cardholder

Name|Type|Format|Description
---|---|---|---
`email`|`string`|-|Email address of the card holder
`employeeId`|`string`|-|Concur specific employeeId. This is an alternative way for identifying a Concur user. The employeeId is a client facing ID.
`firstName`|`string`|-|First name of the card holder
`lastName`|`string`|-|Last name of the card holder
`userId`|`string`|-|The unique identifier of the SAP Concur user (refer to [Identity v4 API](/api-reference/profile/v4.identity.html)). This is the preferred way for identifying a Concur user. The userId is a technical non-client facing ID.

## <a name="schema-provider"></a>Provider

Name|Type|Format|Description
---|---|---|---
`countryCode`|`string`|ISO 3166-1 Alpha-2 code|**Required** Provider country code

## <a name="schema-travelrequestreference"></a>Travel Request Reference

Name|Type|Format|Description
---|---|---|---
`id`|`string`|-|**Required** Unique identifier for an SAP Concur travel request (refer to [Travel Request v4 API](/api-reference/request/v4.endpoints.request-resources.html))

# <a name="schemas-transaction"></a>Cards v4 - Transaction Schemas

## <a name="schema-create-transaction-list"></a>Create Transaction List

Name|Type|Format|Description
---|---|---|---
`transactions`|`array`|[`Create Transaction`](#schema-create-transaction)|**Required** An array of transactions to be created

## <a name="schema-create-transaction"></a>Create Transaction

Name|Type|Format|Description
---|---|---|---
`account`|`object`|[`Transaction Account Reference`](schema-transaction-accountreference)|**Required** Reference to the card account to which this transaction belongs to
`acquirerReferenceNumber`|`string`|-|Acquirer reference number
`authorizationExternalId`|`string`|-|External ID of the referenced (pre-)authorization
`billedAmount`|`object`|[`Amount`](#schema-amount)|Billed amount
`carRental`|`object`|[`Car Rental`](#schema-carrental)|Car rental addendum data
`customData`|`array`|[`Custom Data`](#schema-customdata)|Custom data
`customerVatNumber`|`string`|-|Customer VAT number
`description`|`string`|-|Description of the transaction
`description2`|`string`|-|Description2 of the transaction
`description3`|`string`|-|Description3 of the transaction
`description4`|`string`|-|Description4 of the transaction
`description5`|`string`|-|Description5 of the transaction
`externalId`|`string`|-|**Required** Unique identifier for a card transaction as defined by an external system (outside SAP Concur)
`fleet`|`object`|Fleet Addendum|Fleet addendum data
`lodging`|`object`|Lodging Addendum|Lodging addendum data
`merchant`|`object`|Merchant|**Required** Merchant details
`merchantReferenceNumber`|`string`|-|Merchant reference number
`postedAmount`|`object`|[`Amount`](#schema-amount)|**Required** Posted amount
`postedDate`|`string`|-|**Required** Posted date
`processorReferenceNumber`|`string`|-|Processor reference number
`purchase`|`object`|Purchase Addendum|Purchase addendum data
`referenceNumber`|`string`|-|Transaction reference number for display purposes
`statement`|`object`|Transaction Statement|Statement details
`taxes`|`array`|Transaction Tax|Taxes incurred for the transaction
`totalTaxAmount`|`object`|[`Amount`](#schema-amount)|Total tax amount
`transactionAmount`|`object`|[`Amount`](#schema-amount)|**Required** Transaction amount
`transactionDate`|`date`|ISO 8601 `YYYY-MM-DD` TODO: other dates and timestamps|**Required** Transaction date
`transactionDateTime`|`timestamp`|RFC 3339 `YYYY-MM-DDThh:mm:ss.nnn`|Timestamp when the transaction happened
`travel`|`object`|Travel Addendum|Travel addendum data
`type`|`enum`|-|**Required** Type of the transaction. Supported values: `ANF - Annual Fees`, `CAV - Cash Advance`, `CCF - Cash and Check Fees`, `RPE - Regular Transaction`, `FNC - Finance Charges`, `NSF - Insufficient Funds Check Fees`, `LAF - Late Fees`, `CHG - Other Bank Charges and Fees`, `PAY - Payment`

## <a name="schema-transaction-accountreference"></a>Transaction Account Reference

Name|Type|Format|Description
---|---|---|---
`externalId`|`string`|-|**Required** Unique identifier (token) of the referenced billing account as defined by an external system (outside SAP Concur). Must not contain primary account number (PAN).

## <a name="schema-carrental"></a>Car Rental

Name|Type|Format|Description
---|---|---|---
`adjustmentAmount`|`object`|[`Amount`](#schema-amount)|Adjustment amount
`charges`|`array`|Car Rental Charges|Car rental charges
`classificationCode`|`string`|-|Classification of the rented vehicle
`commodityCode`|`string`|-|Commodity code
`customData`|`array`|Custom Data|Custom data
`dailyRate`|`object`|[`Amount`](#schema-amount)|Daily rental fee
`extraChargeAmount`|`object`|[`Amount`](#schema-amount)|Total amount of extra charges applied
`extraChargeCode`|`string`|-|Code describing the cause of extra charges applied
`extraDistanceRate`|`object`|[`Amount`](#schema-amount)|Additional rate per distance unit applied to the vehicle
`maximumFreeDistance`|`object`|Distance|Maximum travel distance allowed to the customer before additional charges apply
`mileageRate`|`object`|[`Amount`](#schema-amount)|Rate applied per unit of distance traveled in vehicle
`numberOfVehicles`|`integer`|-|Number of vehicles rented
`pickupAddress`|`object`|Address|Address where the vehicle was rented
`pickupDate`|`string`|string|Date on which the vehicle was rented
`pickupPropertyId`|`string`|-|Property ID where the vehicle was rented
`rentalAgreementNumber`|`string`|-|Number entered at the point of sale
`rentalDays`|`integer`|-|Number of days the vehicle was rented
`renterName`|`string`|-|Name of the individual that made the rental agreement
`renterNotShown`|`boolean`||Renter not shown flag
`returnAddress`|`object`|Address|True if renter did not pick up vehicle; no show charges may apply
`returnDate`|`string`|-|Date on which the customer returned the vehicle
`returnPropertyId`|`string`|-|Property ID where the vehicle was returned
`totalDistance`|`object`|Distance|Total distance traveled during the rental period
`weeklyRate`|`object`|[`Amount`](#schema-amount)|Weekly rental fee

## <a name="schema-Fleet"></a>Fleet

Name|Type|Format|Description
---|---|---|---
`discountAmount`|`object`|[`Amount`](#schema-amount)|Discount Amount
`driverId`|`string`||Driver ID
`fuelType`|`enum`||**Required** Fuel type. Supported values: `ALCOHOL - Alcohol-based Fuel`, `AUTOGAS - Autogas (LPG)`, `AVIATION - Aviation/Jet Fuel`, `BIOBLEND - Biodiesel-blended Fuel`, `BIOFUEL - Biodiesel Fuel`, `CLNDIESEL - Clean Diesel`, `DIESEL - Diesel Fuel`, `GASOLINE - Gasoline`, `MARINE - Marine Fuel`, `NATURAL - Natural Gas`, `OTHER - Other Fuel`, `UNDEF - Undefined Fuel Type`
`items`|`array`|Fleet Item|Fleet items
`odometer`|`string`||Odometer reading
`productType`|`enum`||**Required** Product type. Supported values: `CARACC - Automotive Accessories`, `GLASS - Automotive Glass`, `AVIACC - Aviation Accessories`, `AVIFOOD - Aviation Food/Beverage`, `AVIMAINT - Aviation Maintenance`, `BATTERIES - Batteries`, `BEVERAGE - Beverage`, `BRAKE - Brakes and Brake Services`, `WASH - Car Wash`, `SMOKE - Cigarettes/Tobacco`, `FEE - Fees`, `FOOD - Food`, `AVIATION - General Aviation`, `HEALTH - Health/Beauty`, `LABOR - Labor`, `MISC - Miscellaneous Product`, `OIL - Motor Oil`, `PARTS - Parts`, `REPAIR - Repair`, `SERVICE - Services`, `TIRES - Tires`, `TBA - Tires Batteries Accessories`, `TOW - Towing`, `UNDEF - Undefined Product Type`
`quantity`|`object`|Fleet Quantity|Quantity
`serviceType`|`enum`||**Required** Service type. Supported values: `FULL - Full-service`, `NFUEL - Only non-fuel products purchased`, `SELF - Self-service`, `UNDEF - Undefined Service Type`
`totalAmount`|`object`|[`Amount`](#schema-amount)|Total amount
`unitAmount`|`object`|[`Amount`](#schema-amount)|Price per unit of measuer
`vehicleNumber`|`string`||Vehicle Number


# <a name="schemas-common"></a>Cards v4 - Common Schemas

## <a name="schema-bulkapi-response"></a>Bulk API Response
Name|Type|Format|Description
---|---|---|---
`requestId`|`string`|-|**Required** Unique identifier of the bulk API request
`links`|`array`|[`Link`](#schema-link)|An array of links

## <a name="schema-link"></a>Link

Name|Type|Format|Description
---|---|---|---
`href`|`string`|-|**Required** Hyperlink to the resource
`rel`|`string`|-|**Required** Relation type as defined by the server

## <a name="schema-error-response"></a>Error Response

Name|Type|Format|Description
---|---|---|---
`errorCode`|`string`|-|**Required** Machine readable code associated with the error which is static and never localized. Possible error codes: `invalidRequest - The request contains errors (usually contains a detailed error list)`, `invalidJson - The request body is not a valid JSON`
`errorMessage`|`string`|-|**Required** Message associated with the error
`dataPath`|`string`|-|Relative data path
`errors`|`array`|[`Error`](#schema-error)|An array of detailed/nested errors

## <a name="schema-error"></a>Error

Name|Type|Format|Description
---|---|---|---
`errorCode`|`string`|-|**Required** Machine readable code associated with the error which is static and never localized. Possible error codes see [Detailed Error Codes](#detailed-error-codes)
`errorMessage`|`string`|-|**Required** Message associated with the error
`dataPath`|`string`|-|Relative data path

## <a name="schema-amount"></a>Amount

Name|Type|Format|Description
---|---|---|---
`currencyCode`|`string`|3-letter ISO 4217 currency code|**Required** Currency of the amount
`value`|`number`|-|**Required** Amount value

## <a name="schema-customdata"></a>Custom Data

Name|Type|Format|Description
---|---|---|---
`id`|`string`|-|**Required** Id of the custom field
`value`|`string`|-|Value of the custom field

# <a name="http-status-codes"></a>Cards v4 - HTTP Status Codes

HTTP Status Code|Description
---|---
200 OK|The request succeeded
202 Accepted|The request has been accepted and will be processed asynchronously
400 Bad Request|The request was rejected due to client-side errors. Possible error codes: `invalidRequest`, `invalidJson`. In case of `invalidRequest` the error response usually contains a detailed error list, refer to Detailed Error Codes.
401 Unauthorized|The request is not authenticated. Missing or invalid authorization header.
403 Forbidden|The request is not authorized to access this resource.
404 Not Found|The requested resource does not exist
500 Internal Server Error|Unexpected error on server side|
503 Service Unavailable|The server is temporarily unavailable

## <a name="detailed-error-codes"></a>Detailed Error Codes

Error Code|Description
---|---
tooManyItems|The collection contains more than the allowed number of items
missingRequiredField|Missing required field
invalidFieldSize|Size must be between {min} and {max}
invalidEnum|Value is not one of the allowed values
invalidCountryCode|Value is not a valid ISO 3166-1 Alpha-2 country code
invalidCurrencyCode|Value is not a valid 3-letter ISO 4217 currency code
invalidUUID|Value is not a valid UUID
invalidEmailAddress|Value is not a valid email address
invalidCharsExternalId|Ony alphanumeric characters, hyphen -, and underscores _ are allowed
duplicateExternalId|The externalId in this request must be unique
duplicateTaxType|The tax type must be unique within each taxes list
duplicateChargeName|The charge name must be unique within each charges list
duplicateCustomDataID|The custom data id must be unique within each customData list
ambiguousAddendumType|The transaction contains data for multiple addendum types at the same time
currencyInconsistency|The transaction contains incosistencies between the transaction currency and other currency fields
