---
title: Cards v4 - Endpoint Schemas
layout: reference
---

# Cards v4 - Endpoint Schemas

{% include prerelease.html %}

## <a name="schema-create-account-list"></a>Create Account List

Name|Type|Format|Description
---|---|---|---
`accounts`|`array`|[`Create Account`](#schema-create-account)|An array of Accounts to be created

## <a name="schema-create-account"></a>Create Account

Name|Type|Format|Description
---|---|---|---
`accountType`|`string`|-|**Required** Type of the credit card account. Supported values: `I - Individual`, `M - Managing (the master account of virtual cards)`, `V - Virtual card`
`billedCurrency`|`string`|3-letter ISO 4217 currency code|Billed currency of the card account
`billingAccount`|`object`|[`Billing Account Reference`](#schema-billingaccountreference)|Reference to the billing account, e.g. in case of virual card this references the managing/master account
`cardBrand`|`string`|-|Brand of the card. Supported values: `AX - American Express`, `CA - MasterCard`, `CB - Carte Blance`, `DC - Diners Club`, `DS - Discover`, `EC - EuroCard`, `ER - ENROUTE`, `JC - JCB International`, `OT - Other`, `TP - UATP Card`, `UP - China Union Pay`, `VI - VISA`
`cardProductDescription`|`string`|-|**Required** Branded name of the credit card; might be used for display purposes
`cardProductType`|`string`|-|**Required** Card product type. Supported values: `CORP - Corporate Card`, `BUSN - Business Card`, `PERS - Personal Card`
`cardholder`|`object`|[`Cardholder`](#schema-cardholder)|Cardholder owning this card account
`externalId`|`string`|-|**Required** Unique identifier (token) for a card account as defined by an external system (outside SAP Concur). Must not contain primary account number (PAN).
`lastSegment`|`string`|-|**Required** Last four digits of the credit card number
`liabilityType`|`string`|-|**Required** Liability type (payment method). Supported values: `IBIP - Individually Billed, Individually Paid`, `IBCP - Individually Billed, Company Paid`, `CBCP - Company Billed Company Paid`
`nameOnCard`|`string`|-|**Required** Embossed name on the card
`provider`|`object`|[`Provider`](#schema-provider)|**Required** Credit Card Provider
`status`|`string`|-|Lifecycle status (default: Active). Supported values: `A - Active`, `C - Canceled`
`travelRequest`|`object`|[`Travel Request Reference`](#schema-travelrequestreference)|Reference to an SAP Concur Travel Request which is related to this card account

## <a name="schema-billingaccountreference"></a>Billing Account Reference

Name|Type|Format|Description
---|---|---|---
`externalId`|`string`|-|**Required** Unique identifier (token) of the referenced billing account as defined by an external system (outside SAP Concur). Must not contain primary account number (PAN).

## <a name="schema-cardholder"></a>Cardholder

Name|Type|Format|Description
---|---|---|---
`email`|`string`|-|Email address of the card holder
`employeeId`|`string`|-|Concur specific employeeId. This is an alternative way for identifying a Concur user. The employeeId is a client facing ID.
`firstName`|`string`|-|First name of the card holder
`lastName`|`string`|-|Last name of the card holder
`userId`|`string`|-|The unique identifier of the SAP Concur user (refer to [Identity v4 API](/api-reference/profile/v4.identity.html)). This is the preferred way for identifying a Concur user. The userId is a technical non-client facing ID.

## <a name="schema-provider"></a>Provider

Name|Type|Format|Description
---|---|---|---
`countryCode`|`string`|**Required** ISO 3166-1 Alpha-2 code|Provider country code

## <a name="schema-travelrequestreference"></a>Travel Request Reference

Name|Type|Format|Description
---|---|---|---
`id`|`string`|-|**Required** Unique identifier for an SAP Concur travel request (refer to [Travel Request v4 API](/api-reference/request/v4.endpoints.request-resources.html))

## <a name="schema-bulkapi-response"></a>Bulk API Response
Name|Type|Format|Description
---|---|---|---
`requestId`|`string`|-|**Required** Unique identifier of the bulk API request
`links`|`array`|[`Link`](#schema-link)|An array of links

## <a name="schema-link"></a>Link

Name|Type|Format|Description
---|---|---|---
`href`|`string`|-|**Required** Hyperlink to the resource
`rel`|`string`|-|**Required** Relation type as defined by the server

## <a name="schema-error-response"></a>Error Response

Name|Type|Format|Description
---|---|---|---
`errorCode`|`string`|-|**Required** Machine readable code associated with the error which is static and never localized. Possible error codes: `invalidRequest - The request contains errors (usually contains a detailed error list)`, `invalidJson - The request body is not a valid JSON`
`errorMessage`|`string`|-|**Required** Message associated with the error
`dataPath`|`string`|-|Relative data path
`errors`|`array`|[`Error`](#schema-error)|An array of detailed/nested errors

## <a name="schema-error"></a>Error

Name|Type|Format|Description
---|---|---|---
`errorCode`|`string`|-|**Required** Machine readable code associated with the error which is static and never localized. Possible error codes see [Detailed Error Codes](#detailed-error-codes)
`errorMessage`|`string`|-|**Required** Message associated with the error
`dataPath`|`string`|-|Relative data path

# <a name="http-status-codes"></a>HTTP Status Codes

HTTP Status Code|Description
---|---
200 OK|The request succeeded
202 Accepted|The request has been accepted and will be processed asynchronously
400 Bad Request|The request was rejected due to client-side errors. Possible error codes: `invalidRequest`, `invalidJson`. In case of `invalidRequest` the error response usually contains a detailed error list, refer to Detailed Error Codes.
401 Unauthorized|The request is not authenticated. Missing or invalid authorization header.
403 Forbidden|The request is not authorized to access this resource.
404 Not Found|The requested resource does not exist
500 Internal Server Error|Unexpected error on server side|
503 Service Unavailable|The server is temporarily unavailable

## <a name="detailed-error-codes"></a>Detailed Error Codes

Error Code|Description
---|---
tooManyItems|The collection contains more than the allowed number of items
missingRequiredField|Missing required field
invalidFieldSize|Size must be between {min} and {max}
invalidEnum|Value is not one of the allowed values
invalidCountryCode|Value is not a valid ISO 3166-1 Alpha-2 country code
invalidCurrencyCode|Value is not a valid 3-letter ISO 4217 currency code
invalidUUID|Value is not a valid UUID
invalidEmailAddress|Value is not a valid email address
invalidCharsExternalId|Ony alphanumeric characters, hyphen -, and underscores _ are allowed
duplicateExternalId|The externalId in this request must be unique
duplicateTaxType|The tax type must be unique within each taxes list
duplicateChargeName|The charge name must be unique within each charges list
duplicateCustomDataID|The custom data id must be unique within each customData list
ambiguousAddendumType|The transaction contains data for multiple addendum types at the same time
currencyInconsistency|The transaction contains incosistencies between the transaction currency and other currency fields
